//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DpStatConsoleApp
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DPStatServiceEntities : DbContext
    {
        public DPStatServiceEntities()
            : base("name=DPStatServiceEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AvailableAppointmentDate> AvailableAppointmentDates { get; set; }
        public virtual DbSet<InputFetchAvailableAppointmentDate> InputFetchAvailableAppointmentDates { get; set; }
    
        public virtual ObjectResult<UspGetInputFetchAvailableAppointmentDate_Result> UspGetInputFetchAvailableAppointmentDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetInputFetchAvailableAppointmentDate_Result>("UspGetInputFetchAvailableAppointmentDate");
        }
    
        public virtual int uspInsertAvailableAppointmentDates(Nullable<System.DateTime> aggreedDate, string branchNo, string bNStyle, string locationType, Nullable<System.DateTime> availableDate)
        {
            var aggreedDateParameter = aggreedDate.HasValue ?
                new ObjectParameter("AggreedDate", aggreedDate) :
                new ObjectParameter("AggreedDate", typeof(System.DateTime));
    
            var branchNoParameter = branchNo != null ?
                new ObjectParameter("BranchNo", branchNo) :
                new ObjectParameter("BranchNo", typeof(string));
    
            var bNStyleParameter = bNStyle != null ?
                new ObjectParameter("BNStyle", bNStyle) :
                new ObjectParameter("BNStyle", typeof(string));
    
            var locationTypeParameter = locationType != null ?
                new ObjectParameter("LocationType", locationType) :
                new ObjectParameter("LocationType", typeof(string));
    
            var availableDateParameter = availableDate.HasValue ?
                new ObjectParameter("AvailableDate", availableDate) :
                new ObjectParameter("AvailableDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspInsertAvailableAppointmentDates", aggreedDateParameter, branchNoParameter, bNStyleParameter, locationTypeParameter, availableDateParameter);
        }
    }
}
