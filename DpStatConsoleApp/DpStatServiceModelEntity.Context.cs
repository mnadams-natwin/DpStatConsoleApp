//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DpStatConsoleApp
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DPStatServiceEntities : DbContext
    {
        public DPStatServiceEntities()
            : base("name=DPStatServiceEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AreaParam> AreaParams { get; set; }
        public virtual DbSet<BankHoliday> BankHolidays { get; set; }
        public virtual DbSet<ADASTypeParam> ADASTypeParams { get; set; }
        public virtual DbSet<AvailableAppointmentDate> AvailableAppointmentDates { get; set; }
        public virtual DbSet<AvailableAppointmentDates_bkup> AvailableAppointmentDates_bkup { get; set; }
        public virtual DbSet<BNNoParam> BNNoParams { get; set; }
        public virtual DbSet<BNStyleParam> BNStyleParams { get; set; }
        public virtual DbSet<BranchMemberParam> BranchMemberParams { get; set; }
        public virtual DbSet<InputFetchAvailableAppointmentDate> InputFetchAvailableAppointmentDates { get; set; }
        public virtual DbSet<LocationTypeParam> LocationTypeParams { get; set; }
        public virtual DbSet<WorkTypeLHSParam> WorkTypeLHSParams { get; set; }
        public virtual DbSet<WorkTypeRHSParam> WorkTypeRHSParams { get; set; }
        public virtual DbSet<AvailableDates_BASE_view> AvailableDates_BASE_view { get; set; }
    
        public virtual ObjectResult<UspGetInputFetchAvailableAppointmentDate_Result> UspGetInputFetchAvailableAppointmentDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetInputFetchAvailableAppointmentDate_Result>("UspGetInputFetchAvailableAppointmentDate");
        }
    
        public virtual int uspInsertAvailableAppointmentDates(Nullable<System.DateTime> agreedDate, string branchNo, string bNNo, string locationType, Nullable<System.DateTime> availableDate, string aDASType, string workType)
        {
            var agreedDateParameter = agreedDate.HasValue ?
                new ObjectParameter("AgreedDate", agreedDate) :
                new ObjectParameter("AgreedDate", typeof(System.DateTime));
    
            var branchNoParameter = branchNo != null ?
                new ObjectParameter("BranchNo", branchNo) :
                new ObjectParameter("BranchNo", typeof(string));
    
            var bNNoParameter = bNNo != null ?
                new ObjectParameter("BNNo", bNNo) :
                new ObjectParameter("BNNo", typeof(string));
    
            var locationTypeParameter = locationType != null ?
                new ObjectParameter("LocationType", locationType) :
                new ObjectParameter("LocationType", typeof(string));
    
            var availableDateParameter = availableDate.HasValue ?
                new ObjectParameter("AvailableDate", availableDate) :
                new ObjectParameter("AvailableDate", typeof(System.DateTime));
    
            var aDASTypeParameter = aDASType != null ?
                new ObjectParameter("ADASType", aDASType) :
                new ObjectParameter("ADASType", typeof(string));
    
            var workTypeParameter = workType != null ?
                new ObjectParameter("WorkType", workType) :
                new ObjectParameter("WorkType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspInsertAvailableAppointmentDates", agreedDateParameter, branchNoParameter, bNNoParameter, locationTypeParameter, availableDateParameter, aDASTypeParameter, workTypeParameter);
        }
    
        public virtual ObjectResult<uspGetInputFetchAvailableAppointmentDate1_Result> uspGetInputFetchAvailableAppointmentDate1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetInputFetchAvailableAppointmentDate1_Result>("uspGetInputFetchAvailableAppointmentDate1");
        }
    
        public virtual ObjectResult<string> uspDropCreatePopulateBankHolidayTable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspDropCreatePopulateBankHolidayTable");
        }
    }
}
